{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Documents/Programming/Python/Flask/baby-tracker/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"http://localhost:5000\";\n\nfunction App() {\n  _s();\n\n  const [description, setDescription] = useState(\"\");\n  const [editDescription, setEditDescription] = useState(\"\");\n  const [eventsList, setEventsList] = useState([]);\n  const [eventId, setEventId] = useState(null);\n\n  const fetchEvents = async () => {\n    const data = await axios.get(`${baseUrl}/events`);\n    const {\n      events\n    } = data.data;\n    setEventsList(events);\n  };\n\n  const handleChange = e => {\n    setDescription(e.target.value);\n  };\n\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`${baseUrl}/events/${id}`);\n      const updatedList = eventsList.filter(event => event.id !== id);\n      setEventsList(updatedList);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const data = await axios.post(`${baseUrl}/event`, {\n        description\n      });\n      setEventsList([...eventsList, data.data]);\n      setDescription(\"\");\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const handleEdit = event => {\n    setEventId(event.id);\n    setEditDescription(event.description);\n  };\n\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"text\",\n          name: \"description\",\n          id: \"description\",\n          placeholder: \"Describe the Event\",\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: eventsList.map(event => {\n          if (eventId === event.id) {\n            /*#__PURE__*/\n            _jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => handleChange(e, \"edit\"),\n                type: \"text\",\n                name: \"editDescription\",\n                id: \"editDescription\",\n                value: editDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [event.description, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(event.id),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)]\n            }, event.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"I1weUBG+jSv84dFhN9mIMo9s/ls=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/michael/Documents/Programming/Python/Flask/baby-tracker/client/src/App.js"],"names":["useEffect","useState","axios","format","baseUrl","App","description","setDescription","editDescription","setEditDescription","eventsList","setEventsList","eventId","setEventId","fetchEvents","data","get","events","handleChange","e","target","value","handleDelete","id","delete","updatedList","filter","event","err","console","error","message","handleSubmit","preventDefault","post","handleEdit","map"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport axios from \"axios\"\nimport {format} from \"date-fns\";\n\nimport './App.css';\n\nconst baseUrl = \"http://localhost:5000\"\n\nfunction App() {\n  const [description, setDescription] = useState(\"\");\n  const [editDescription, setEditDescription] = useState(\"\");\n  const [eventsList, setEventsList] = useState([]);\n  const [eventId, setEventId] = useState(null);\n\n  const fetchEvents = async () => {\n    const data = await axios.get(`${baseUrl}/events`);\n    const {events} = data.data;\n    setEventsList(events);\n  }\n\n  const handleChange = e => {\n    setDescription(e.target.value);\n  }\n\n  const handleDelete = async (id) => {\n    try {\n      await axios.delete(`${baseUrl}/events/${id}`);\n      const updatedList = eventsList.filter(event => event.id !== id);\n      setEventsList(updatedList);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const data = await axios.post(`${baseUrl}/event`, {description});\n      setEventsList([...eventsList, data.data]);\n      setDescription(\"\");\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  const handleEdit = (event) => {\n    setEventId(event.id);\n    setEditDescription(event.description);\n\n  }\n\n  useEffect(() => {\n    fetchEvents();\n  }, [])\n\n  return (\n    <div className = \"App\">\n      <section>\n        <form onSubmit = {handleSubmit}>\n          <label htmlFor = \"description\">Description</label>\n          <input \n            onChange = {handleChange}\n            type = \"text\"\n            name = \"description\"\n            id = \"description\"\n            placeholder = \"Describe the Event\"\n            value = {description}\n          />\n          <button type = \"submit\">Submit</button>\n        </form>\n      </section>\n      <section>\n        <ul>\n          {eventsList.map(event => {\n            if (eventId === event.id) {\n              <form onSubmit = {handleSubmit} key = {event.id}>\n                <input\n                  onChange = {(e) => handleChange(e, \"edit\")}\n                  type = \"text\"\n                  name = \"editDescription\"\n                  id = \"editDescription\"\n                  value = {editDescription}\n                />\n              </form>\n            } else {\n              return (\n                <li key = {event.id}>\n                  {event.description}\n                  <button onClick = {() => handleDelete(event.id)}>X</button>\n                </li>\n              )\n            }\n          })}\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}