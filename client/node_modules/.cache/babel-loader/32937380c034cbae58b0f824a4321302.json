{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Documents/Programming/Python/Flask/baby-tracker/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"http://localhost:5000\";\n\nfunction App() {\n  _s();\n\n  const [description, setDescription] = useState(\"\");\n  const [eventsList, setEventsList] = useState([]);\n  const [eventId, setEventId] = useState(null);\n\n  const fetchEvents = async () => {\n    const data = await axios.get(`${baseUrl}/events`);\n    const {\n      events\n    } = data.data;\n    setEventsList(events);\n  };\n\n  const handleChange = e => {\n    setDescription(e.target.value);\n  };\n\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`${baseUrl}/events/${id}`);\n      const updatedList = eventsList.filter(event => event.id !== id);\n      setEventsList(updatedList);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const data = await axios.post(`${baseUrl}/event`, {\n        description\n      });\n      setEventsList([...eventsList, data.data]);\n      setDescription(\"\");\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const handleEdit = event => {};\n\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"text\",\n          name: \"description\",\n          id: \"description\",\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: eventsList.map(event => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [event.description, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(event.id),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, event.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"z5RX7v6SaEWdP5ojdRHGqJNIBzI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/michael/Documents/Programming/Python/Flask/baby-tracker/client/src/App.js"],"names":["useEffect","useState","axios","format","baseUrl","App","description","setDescription","eventsList","setEventsList","eventId","setEventId","fetchEvents","data","get","events","handleChange","e","target","value","handleDelete","id","delete","updatedList","filter","event","err","console","error","message","handleSubmit","preventDefault","post","handleEdit","map"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport axios from \"axios\"\nimport {format} from \"date-fns\";\n\nimport './App.css';\n\nconst baseUrl = \"http://localhost:5000\"\n\nfunction App() {\n  const [description, setDescription] = useState(\"\");\n  const [eventsList, setEventsList] = useState([]);\n  const [eventId, setEventId] = useState(null);\n\n  const fetchEvents = async () => {\n    const data = await axios.get(`${baseUrl}/events`);\n    const {events} = data.data;\n    setEventsList(events);\n  }\n\n  const handleChange = e => {\n    setDescription(e.target.value);\n  }\n\n  const handleDelete = async (id) => {\n    try {\n      await axios.delete(`${baseUrl}/events/${id}`);\n      const updatedList = eventsList.filter(event => event.id !== id);\n      setEventsList(updatedList);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const data = await axios.post(`${baseUrl}/event`, {description});\n      setEventsList([...eventsList, data.data]);\n      setDescription(\"\");\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  const handleEdit = (event) => {\n    \n  }\n\n  useEffect(() => {\n    fetchEvents();\n  }, [])\n\n  return (\n    <div className = \"App\">\n      <section>\n        <form onSubmit = {handleSubmit}>\n          <label htmlFor = \"description\">Description</label>\n          <input \n            onChange = {handleChange}\n            type = \"text\"\n            name = \"description\"\n            id = \"description\"\n            value = {description}\n          />\n          <button type = \"submit\">Submit</button>\n        </form>\n      </section>\n      <section>\n        <ul>\n          {eventsList.map(event => {\n            return (\n              <li key = {event.id}>\n                {event.description}\n                <button onClick = {() => handleDelete(event.id)}>X</button>\n              </li>\n            )\n          })}\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}